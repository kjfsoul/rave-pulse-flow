{"version":"1.128.0","results":[{"check_id":"javascript.lang.security.detect-child-process.detect-child-process","path":"agent/validation.ts","start":{"line":6,"col":7,"offset":164},"end":{"line":6,"col":58,"offset":215},"extra":{"message":"Detected calls to child_process from a function argument `filePath`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. ","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Nodejs_Security_Cheat_Sheet.html#do-not-use-dangerous-functions"],"source-rule-url":"https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js","category":"security","technology":["javascript"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/javascript.lang.security.detect-child-process.detect-child-process","shortlink":"https://sg.run/l2lo"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"src/components/RSSFeedStreamer.tsx","start":{"line":166,"col":66,"offset":0},"end":{"line":166,"col":84,"offset":18}}]],"message":"Syntax error at line src/components/RSSFeedStreamer.tsx:166:\n `& festival updates` was unexpected","path":"src/components/RSSFeedStreamer.tsx","spans":[{"file":"src/components/RSSFeedStreamer.tsx","start":{"line":166,"col":66,"offset":0},"end":{"line":166,"col":84,"offset":18}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line agent/main.ts:1:\n `import path from 'path';\nimport { getNextPendingTask, updateTaskStatus, requeueTask } from './supabaseClient';\nimport { submitPromptToClaude } from './claudeClient';\nimport { validateCode } from './validation';\nimport { deployCode } from './deploy';\nimport { error } from 'console';\n\nconst MAX_RETRIES = 3;\n\nasync function runAgentLoop() {\n  while (true) {\n    const task = await getNextPendingTask();\n\n    if (!task) {\n      console.log('No pending tasks. Sleeping for 1 minute...');\n      await new Promise((r) => setTimeout(r, 60000));\n      continue;\n    }\n\n    console.log(`Processing task: ${task.id} - ${task.description}`);\n\n    await updateTaskStatus(task.id, 'in_progress');\n\n    // Fill prompt template\n    const prompt = task.promptTemplate\n      .replace(/{{description}}/g, task.description)\n      .replace(/{{lastResult}}/g, task.lastResult ?? '');\n\n    let response: string;\n\n    try {\n      response = await submitPromptToClaude(prompt);\n    } catch (error: any) {\n      await updateTaskStatus(task.id, 'failed', `API error: ${error.message || error}`);\n      continue;\n    }\n\n    // Extract code block(s) from response (support multiple code blocks)\n    // This regex matches all code blocks with optional language specifier\n    const codeBlocks = [...response.matchAll(/```\n(?:ts|typescript)?\\n([\\s\\S]*?)\n```/gi)];\n    const code = codeBlocks.length > 0 ? codeBlocks.map(m => m[1]).join('\\n\\n') : response;\n\n    // Save code temporarily\n    const tempFilePath = path.resolve(__dirname, 'generatedCode.ts');\n    await deployCode('generatedCode.ts', code);\n\n    const isValid = await validateCode(tempFilePath);\n\n    if (isValid) {\n      await updateTaskStatus(task.id, 'completed', response);\n      console.log(`Task ${task.id} completed.`);\n    } else {\n      task.lastResult = response;\n      task.retries++;\n\n      if (task.retries >= MAX_RETRIES) {\n        await updateTaskStatus(task.id, 'failed', response);\n        console.error(`Task ${task.id} failed after ${MAX_RETRIES} retries.`);\n        // TODO: Notify human via em... (truncated 2381 more characters)","path":"agent/main.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line audit-sec.json:1:\n missing element","path":"audit-sec.json"}],"paths":{"scanned":[".env",".gitignore","AUDIO_UI_COMPONENTS.md","CLAUDE.md","CLAUDE_INTEGRITY_RULES.md","FRS.md","IMPLEMENTATION_MICROTASKS.md","MASTERPLAN.md","PRD.md","README.md","UI_UX_STRUCTURE.md","agent/config.ts","agent/deploy.ts","agent/main.ts","agent/types.ts","agent/validation.ts","audit-ci.json","audit-js.json","audit-sec.json","bun.lockb","claudeupdate.md","components.json","edm-shuffle-output-docs/EDM Shuffle_ Professional Development Manual.docx","edm-shuffle-output-docs/edm-shuffle-output-docs/1-executive-summary-vision.md","edm-shuffle-output-docs/edm-shuffle-output-docs/1-executive-summary.md","edm-shuffle-output-docs/edm-shuffle-output-docs/2-authoritative-project-roadmap-development-phases-milestones.md","edm-shuffle-output-docs/edm-shuffle-output-docs/2-documentation-index.md","edm-shuffle-output-docs/edm-shuffle-output-docs/3-document-index-root-directory.md","edm-shuffle-output-docs/edm-shuffle-output-docs/3-prd-product-requirements-document.md","edm-shuffle-output-docs/edm-shuffle-output-docs/4-frs-functional-requirements-specification.md","edm-shuffle-output-docs/edm-shuffle-output-docs/4-prompt-catalog.md","edm-shuffle-output-docs/edm-shuffle-output-docs/5-feature-gap-analysis.md","edm-shuffle-output-docs/edm-shuffle-output-docs/5-implementation-roadmap.md","edm-shuffle-output-docs/edm-shuffle-output-docs/6-phase-by-phase-features-prompts-tasks.md","edm-shuffle-output-docs/edm-shuffle-output-docs/7-admin-docs.md","edm-shuffle-output-docs/edm-shuffle-output-docs/7-feature-matrix-gap-analysis.md","edm-shuffle-output-docs/edm-shuffle-output-docs/8-built-in-marketing-framework.md","edm-shuffle-output-docs/edm-shuffle-output-docs/8-change-log-claudeupdate-md.md","edm-shuffle-output-docs/edm-shuffle-output-docs/agent-hand-off-notes.md","edm-shuffle-output-docs/edm-shuffle-output-docs/changelog-recent-history.md","edm-shuffle-output-docs/edm-shuffle-output-docs/claude.md","edm-shuffle-output-docs/edm-shuffle-output-docs/claude_integrity_rules.md","edm-shuffle-output-docs/edm-shuffle-output-docs/current-overall-status.md","edm-shuffle-output-docs/edm-shuffle-output-docs/documentation_index.md","edm-shuffle-output-docs/edm-shuffle-output-docs/edm-shuffle-development-manual-master-blueprint.md","edm-shuffle-output-docs/edm-shuffle-output-docs/edm-shuffle-professional-development-manual.md","edm-shuffle-output-docs/edm-shuffle-output-docs/how-to-use-this-file.md","edm-shuffle-output-docs/edm-shuffle-output-docs/memory-context-note-for-next-llm.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-1-core-infrastructure-theming-initial-scaffolding-user-authentication.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-1-user-authentication-account-system-full-user-journey.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-1-user-authentication-account-system.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-2-audio-engine-mix-station.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-3-voting-festival-scheduling.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-4-challenges-social.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-5-marketplace.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-6-community-crews.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-7-admin-docs.md","edm-shuffle-output-docs/edm-shuffle-output-docs/phase-8-built-in-marketing-framework.md","edm-shuffle-output-docs/edm-shuffle-output-docs/reality-audit-placeholder-disclosure.md","eslint.config.js","index.html","package-lock.json","package.json","postcss.config.js","project_overview.md","public/audio/README.md","public/favicon.ico","public/placeholder.svg","public/robots.txt","src/App.css","src/App.tsx","src/components/ArchetypeAuraMeter.tsx","src/components/ArchetypeRevealCeremony.tsx","src/components/ArtistSpotlightCarousel.tsx","src/components/AudioEqualizerDemo.tsx","src/components/AvatarSummonModal.tsx","src/components/BottomNavigation.tsx","src/components/EqualizerBars.tsx","src/components/EqualizerLive.tsx","src/components/FloatingSneakers.tsx","src/components/LaserRaveBackground.tsx","src/components/NeonButton.tsx","src/components/PLUROrbsAnimation.tsx","src/components/PLURcrewSidebar.tsx","src/components/PLURstreakMeter.tsx","src/components/ParticleBurstAnimation.tsx","src/components/QuizBackgroundAnimation.tsx","src/components/RSSFeedStreamer.tsx","src/components/ScrollHintArrow.tsx","src/components/ShuffleDancers.tsx","src/components/VibePreview.tsx","src/components/VisualFX/ArchetypeAuraSprite.tsx","src/components/VisualFX/FestivalStageBackground.tsx","src/components/VisualFX/LightSyncPulse.tsx","src/components/VisualFX/ShuffleDancers.tsx","src/components/audio-ui/BpmAura.tsx","src/components/audio-ui/ConfettiBurst.tsx","src/components/audio-ui/Crossfader.tsx","src/components/audio-ui/CrowdFXLayer.tsx","src/components/audio-ui/DJDeck.tsx","src/components/audio-ui/DebugHUD.tsx","src/components/audio-ui/EnhancedDJDeck.tsx","src/components/audio-ui/EnhancedDebugHUD.tsx","src/components/audio-ui/EnhancedWaveformVisualizer.tsx","src/components/audio-ui/MiniPlayer.tsx","src/components/audio-ui/SubscribeBanner.tsx","src/components/audio-ui/SubscribeModal.tsx","src/components/audio-ui/TrackSelectModal.tsx","src/components/audio-ui/VoiceControlPanel.tsx","src/components/audio-ui/WaveformVisualizer.tsx","src/components/auth/AuthForm.tsx","src/components/auth/ProtectedRoute.tsx","src/components/auth/UserProfile.tsx","src/components/ui/accordion.tsx","src/components/ui/alert-dialog.tsx","src/components/ui/alert.tsx","src/components/ui/aspect-ratio.tsx","src/components/ui/avatar.tsx","src/components/ui/badge.tsx","src/components/ui/breadcrumb.tsx","src/components/ui/button.tsx","src/components/ui/calendar.tsx","src/components/ui/card.tsx","src/components/ui/carousel.tsx","src/components/ui/chart.tsx","src/components/ui/checkbox.tsx","src/components/ui/collapsible.tsx","src/components/ui/command.tsx","src/components/ui/context-menu.tsx","src/components/ui/dialog.tsx","src/components/ui/drawer.tsx","src/components/ui/dropdown-menu.tsx","src/components/ui/form.tsx","src/components/ui/hover-card.tsx","src/components/ui/input-otp.tsx","src/components/ui/input.tsx","src/components/ui/label.tsx","src/components/ui/menubar.tsx","src/components/ui/navigation-menu.tsx","src/components/ui/pagination.tsx","src/components/ui/popover.tsx","src/components/ui/progress.tsx","src/components/ui/radio-group.tsx","src/components/ui/resizable.tsx","src/components/ui/scroll-area.tsx","src/components/ui/select.tsx","src/components/ui/separator.tsx","src/components/ui/sheet.tsx","src/components/ui/sidebar.tsx","src/components/ui/skeleton.tsx","src/components/ui/slider.tsx","src/components/ui/sonner.tsx","src/components/ui/switch.tsx","src/components/ui/table.tsx","src/components/ui/tabs.tsx","src/components/ui/textarea.tsx","src/components/ui/toast.tsx","src/components/ui/toaster.tsx","src/components/ui/toggle-group.tsx","src/components/ui/toggle.tsx","src/components/ui/tooltip.tsx","src/components/ui/use-toast.ts","src/contexts/AudioContext.tsx","src/contexts/AuthContext.tsx","src/hooks/use-mobile.tsx","src/hooks/use-toast.ts","src/hooks/useAudioEngine.ts","src/hooks/useAudioPlayer.ts","src/hooks/useRealAudioEngine.ts","src/hooks/useTTS.ts","src/hooks/useVoiceCommands.ts","src/index.css","src/lib/database.ts","src/lib/stripe.ts","src/lib/supabase.ts","src/lib/utils.ts","src/main.tsx","src/pages/ArchetypeQuiz.tsx","src/pages/DJMixStation.tsx","src/pages/FestivalVotingStage.tsx","src/pages/Index.tsx","src/pages/MarketplaceGrid.tsx","src/pages/NotFound.tsx","src/pages/Profile.tsx","src/pages/ShuffleFeed.tsx","src/utils/audioGenerator.ts","src/vite-env.d.ts","supabase-schema.sql","tailwind.config.ts","technical_architecture.md","tsconfig.app.json","tsconfig.json","tsconfig.node.json","vite.config.ts"]},"time":{"rules":[],"rules_parse_time":0.161848783493042,"profiling_times":{"config_time":1.0707759857177734,"core_time":0.8207972049713135,"ignores_time":0.00017905235290527344,"total_time":1.8919999599456787},"parsing_time":{"total_time":1.1275408267974854,"per_file_time":{"mean":0.008541975960587011,"std_dev":0.00015514108523879735},"very_slow_files":[]},"targets":[],"total_bytes":0,"max_memory_bytes":262744256},"skipped_rules":[]}
